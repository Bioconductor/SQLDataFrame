% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SQLDataFrame-methods.R
\name{mutate.SQLDataFrame}
\alias{mutate.SQLDataFrame}
\title{Create or transform variables}
\usage{
\method{mutate}{SQLDataFrame}(.data, ...)
}
\arguments{
\item{.data}{A SQLDataFrame object.}

\item{...}{Name-value pairs of expressions, each with length 1 or
the same length as the number of rows in the group (if using
‘group_by()’) or in the entire input (if not using groups). The
name of each argument will be the name of a new variable, and
the value will be its corresponding value. Use a ‘NULL’ value
in ‘mutate’ to drop a variable.  New variables overwrite
existing variables of the same name.}
}
\value{
A SQLDataFrame object.
}
\description{
\code{mutate()} adds new columns and preserves
    existing ones; It also preserves the number of rows of the
    input. New variables overwrite existing variables of the same
    name.
}
\examples{
dbfile <- system.file("extdata/test.db", package = "SQLDataFrame")
obj <- SQLDataFrame(dbname = dbfile, dbtable = "state", dbkey = "state")
obj \%>\% mutate(p1 = population / 10)
obj \%>\% mutate(s1 = size)

}
