% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SQLDataFrame-class.R
\docType{methods}
\name{SQLDataFrame}
\alias{SQLDataFrame}
\alias{dbname,SQLDataFrame-method}
\alias{dbtable,SQLDataFrame-method}
\alias{dbkey,SQLDataFrame-method}
\alias{dbconcatKey,SQLDataFrame-method}
\alias{ROWNAMES,SQLDataFrame-method}
\alias{show,SQLDataFrame-method}
\alias{as.data.frame,SQLDataFrame-method}
\alias{coerce,SQLDataFrame,data.frame-class}
\alias{coerce}
\alias{coerce,SQLDataFrame,DataFrame-class}
\title{SQLDataFrame class}
\usage{
SQLDataFrame(dbname = character(0), dbtable = character(0),
  dbkey = character(0), col.names = NULL)

\S4method{dbname}{SQLDataFrame}(x)

\S4method{dbtable}{SQLDataFrame}(x)

\S4method{dbkey}{SQLDataFrame}(x)

\S4method{dbconcatKey}{SQLDataFrame}(x)

\S4method{ROWNAMES}{SQLDataFrame}(x)

\S4method{show}{SQLDataFrame}(object)

\S4method{as.data.frame}{SQLDataFrame}(x, row.names = NULL,
  optional = FALSE, ...)
}
\arguments{
\item{dbname}{A character string for the database file path.}

\item{dbtable}{A character string for the table name in that
database. If not provided and there is only one table
available, it will be read in by default.}

\item{dbkey}{A character vector for the name of key columns that
could uniquely identify each row of the database table.}

\item{col.names}{A character vector specifying the column names you
want to read into the \code{SQLDataFrame}.}

\item{from}{the \code{SQLDataFrame} object to be coerced.}
}
\value{
A \code{SQLDataFrame} object.
}
\description{
\code{SQLDataFrame} constructor, slot getters, show
    method and coercion methods to \code{DataFrame} and
    \code{data.frame} objects.
}
\examples{

## constructor
dbname <- system.file("extdata/test.db", package = "SQLDataFrame")
obj <- SQLDataFrame(dbname = dbname, dbtable = "state",
                    dbkey = "state")
obj
obj1 <- SQLDataFrame(dbname = dbname, dbtable = "state",
                     dbkey = c("region", "population"))
obj1

## slot accessors
dbname(obj)
dbtable(obj)
dbkey(obj)
dbkey(obj1)

dbconcatKey(obj)
dbconcatKey(obj1)

## ROWNAMES
ROWNAMES(obj[sample(10, 5), ])
ROWNAMES(obj1[sample(10, 5), ])

## coercion
as.data.frame(obj)
as(obj, "DataFrame") 
}
